/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Color, Type } from "./components/m-button/Type";
export namespace Components {
    interface MButton {
        "color": Color;
        "disabled": boolean;
        "href": string;
        "icon": string;
        "loading": boolean;
        "type": Type;
    }
    interface MIcon {
        "icon": string;
        "iconWidth": number;
        "size": number;
    }
    interface MMessage {
        "addMessage": (text: any, icon: any, actions: any) => Promise<void>;
        "canDelete": boolean;
        "destroy": (node: HTMLElement) => Promise<void>;
        "icon": string;
        "type": string;
    }
    interface MMessageBox {
    }
    interface MyComponent {
    }
}
declare global {
    interface HTMLMButtonElement extends Components.MButton, HTMLStencilElement {
    }
    var HTMLMButtonElement: {
        prototype: HTMLMButtonElement;
        new (): HTMLMButtonElement;
    };
    interface HTMLMIconElement extends Components.MIcon, HTMLStencilElement {
    }
    var HTMLMIconElement: {
        prototype: HTMLMIconElement;
        new (): HTMLMIconElement;
    };
    interface HTMLMMessageElement extends Components.MMessage, HTMLStencilElement {
    }
    var HTMLMMessageElement: {
        prototype: HTMLMMessageElement;
        new (): HTMLMMessageElement;
    };
    interface HTMLMMessageBoxElement extends Components.MMessageBox, HTMLStencilElement {
    }
    var HTMLMMessageBoxElement: {
        prototype: HTMLMMessageBoxElement;
        new (): HTMLMMessageBoxElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "m-button": HTMLMButtonElement;
        "m-icon": HTMLMIconElement;
        "m-message": HTMLMMessageElement;
        "m-message-box": HTMLMMessageBoxElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface MButton {
        "color"?: Color;
        "disabled"?: boolean;
        "href"?: string;
        "icon"?: string;
        "loading"?: boolean;
        "type"?: Type;
    }
    interface MIcon {
        "icon"?: string;
        "iconWidth"?: number;
        "size"?: number;
    }
    interface MMessage {
        "canDelete"?: boolean;
        "icon"?: string;
        "type"?: string;
    }
    interface MMessageBox {
    }
    interface MyComponent {
    }
    interface IntrinsicElements {
        "m-button": MButton;
        "m-icon": MIcon;
        "m-message": MMessage;
        "m-message-box": MMessageBox;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "m-button": LocalJSX.MButton & JSXBase.HTMLAttributes<HTMLMButtonElement>;
            "m-icon": LocalJSX.MIcon & JSXBase.HTMLAttributes<HTMLMIconElement>;
            "m-message": LocalJSX.MMessage & JSXBase.HTMLAttributes<HTMLMMessageElement>;
            "m-message-box": LocalJSX.MMessageBox & JSXBase.HTMLAttributes<HTMLMMessageBoxElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
